{"ast":null,"code":"var _jsxFileName = \"C:\\\\Clinton\\\\web-dev\\\\cellar-admin\\\\frontend\\\\src\\\\Modal\\\\Modal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Modal.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport useItems from '../Context/StateContext';\nimport axios from 'axios';\nimport { updateUserRoute } from '../ApiRoutes/ApiRoutes';\nimport { toastOptions } from '../utilities/toastOptions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Modal(_ref) {\n  _s();\n  let {\n    closeModal,\n    email,\n    username,\n    newPassword,\n    id\n  } = _ref;\n  const [password, setPassword] = useState(\"\");\n  const {\n    items,\n    dispatch\n  } = useItems();\n\n  // console.log(updateUserRoute)\n  // console.log(newPassword)\n  // console.log(email, username, newPassword, password, id)\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    //validation processes\n    if (password.length < 8) {\n      toast.error(\"Password must have at least 8 characters\", toastOptions);\n    } else if (email.length < 8) {\n      toast.error(\"Email must have at least 8 characters\", toastOptions);\n    } else if (newPassword.length != 0 && newPassword.length < 8) {\n      toast.error(\"New password must have at least 8 characters\", toastOptions);\n    } else if (username.length < 8) {\n      toast.error(\"Username must have at least 8 characters\", toastOptions);\n    } else {\n      await axios.put(`${updateUserRoute}/${id}`, {\n        username,\n        email,\n        newPassword,\n        password\n      }).then(res => {\n        // console.log(res.data.newUser)\n\n        const username = res.data.newUser.username;\n        const email = res.data.newUser.email;\n        const id = res.data.newUser._id;\n\n        // console.log(res.data.getNewUser)\n        // console.log(username, email, id);\n        closeModal(false);\n        dispatch({\n          type: 'SET_USER',\n          user: {\n            username,\n            email,\n            id\n          }\n        });\n        toast.success(\"Successfully Updated!\", toastOptions);\n      }).catch(err => {\n        // console.log(err)\n        toast.error(err.response.data, toastOptions);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modalBackground\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalOverlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-title\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please Enter Your Password To Proceed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-inputs\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setPassword(e.target.value),\n          value: password,\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-button\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => closeModal(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(Modal, \"eIjuThJrbVxlq3R4ru2i1vcSupc=\", false, function () {\n  return [useItems];\n});\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useState","ToastContainer","toast","useItems","axios","updateUserRoute","toastOptions","jsxDEV","_jsxDEV","Modal","_ref","_s","closeModal","email","username","newPassword","id","password","setPassword","items","dispatch","handleSubmit","e","preventDefault","length","error","put","then","res","data","newUser","_id","type","user","success","catch","err","response","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","value","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Clinton/web-dev/cellar-admin/frontend/src/Modal/Modal.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport './Modal.css'\r\nimport  { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport useItems from '../Context/StateContext';\r\nimport axios from 'axios'\r\nimport { updateUserRoute } from '../ApiRoutes/ApiRoutes';\r\nimport { toastOptions } from '../utilities/toastOptions';\r\n\r\nfunction Modal({ closeModal, email, username, newPassword, id }) {\r\n\r\n    const [password, setPassword] = useState(\"\");\r\n    const { items, dispatch } = useItems();\r\n\r\n    // console.log(updateUserRoute)\r\n    // console.log(newPassword)\r\n    // console.log(email, username, newPassword, password, id)\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        //validation processes\r\n        if (password.length < 8) {\r\n            toast.error(\"Password must have at least 8 characters\", toastOptions)\r\n        } else if (email.length < 8) {\r\n            toast.error(\"Email must have at least 8 characters\", toastOptions)\r\n        } else if (newPassword.length != 0 && newPassword.length < 8) {\r\n            toast.error(\"New password must have at least 8 characters\", toastOptions)\r\n        } else if (username.length < 8) {\r\n            toast.error(\"Username must have at least 8 characters\", toastOptions)\r\n        }\r\n        else {\r\n            await axios.put(`${updateUserRoute}/${id}`, {\r\n                username,\r\n                email,\r\n                newPassword,\r\n                password\r\n            })\r\n            .then( res => {\r\n\r\n                // console.log(res.data.newUser)\r\n\r\n                const username = res.data.newUser.username;\r\n                const email = res.data.newUser.email;\r\n                const id = res.data.newUser._id;\r\n\r\n                // console.log(res.data.getNewUser)\r\n                // console.log(username, email, id);\r\n                closeModal(false)\r\n                dispatch({\r\n                    type: 'SET_USER',\r\n                    user: {\r\n                        username,\r\n                        email,\r\n                        id,\r\n                    },\r\n                })\r\n                toast.success(\"Successfully Updated!\", toastOptions)\r\n            })\r\n            .catch( err => {\r\n                // console.log(err)\r\n                toast.error(err.response.data, toastOptions)\r\n            })\r\n        }\r\n    }\r\n\r\n  return (\r\n    <div className=\"modalBackground\">\r\n        <div className=\"modalOverlay\"></div>\r\n        <div className=\"modalContainer\">\r\n            <div className=\"modal-title\">\r\n                <p>Please Enter Your Password To Proceed</p>\r\n            </div>\r\n            <div className=\"modal-inputs\">\r\n                {/* <p>Password</p> */}\r\n                <input type=\"text\" onChange={e => setPassword(e.target.value)} value={password} placeholder='Password'/>\r\n            </div>\r\n            <div className=\"modal-button\">\r\n                <button onClick={() => closeModal(false)}>Close</button>\r\n                <button onClick={handleSubmit}>Continue</button>\r\n            </div>\r\n        </div>\r\n        <ToastContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa;AACpB,SAAUC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AACvD,OAAO,uCAAuC;AAC9C,OAAOC,QAAQ,MAAM,yBAAyB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,wBAAwB;AACxD,SAASC,YAAY,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,SAASC,KAAKA,CAAAC,IAAA,EAAmD;EAAAC,EAAA;EAAA,IAAlD;IAAEC,UAAU;IAAEC,KAAK;IAAEC,QAAQ;IAAEC,WAAW;IAAEC;EAAG,CAAC,GAAAN,IAAA;EAE3D,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM;IAAEmB,KAAK;IAAEC;EAAS,CAAC,GAAGjB,QAAQ,CAAC,CAAC;;EAEtC;EACA;EACA;;EAEA,MAAMkB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,IAAIN,QAAQ,CAACO,MAAM,GAAG,CAAC,EAAE;MACrBtB,KAAK,CAACuB,KAAK,CAAC,0CAA0C,EAAEnB,YAAY,CAAC;IACzE,CAAC,MAAM,IAAIO,KAAK,CAACW,MAAM,GAAG,CAAC,EAAE;MACzBtB,KAAK,CAACuB,KAAK,CAAC,uCAAuC,EAAEnB,YAAY,CAAC;IACtE,CAAC,MAAM,IAAIS,WAAW,CAACS,MAAM,IAAI,CAAC,IAAIT,WAAW,CAACS,MAAM,GAAG,CAAC,EAAE;MAC1DtB,KAAK,CAACuB,KAAK,CAAC,8CAA8C,EAAEnB,YAAY,CAAC;IAC7E,CAAC,MAAM,IAAIQ,QAAQ,CAACU,MAAM,GAAG,CAAC,EAAE;MAC5BtB,KAAK,CAACuB,KAAK,CAAC,0CAA0C,EAAEnB,YAAY,CAAC;IACzE,CAAC,MACI;MACD,MAAMF,KAAK,CAACsB,GAAG,CAAE,GAAErB,eAAgB,IAAGW,EAAG,EAAC,EAAE;QACxCF,QAAQ;QACRD,KAAK;QACLE,WAAW;QACXE;MACJ,CAAC,CAAC,CACDU,IAAI,CAAEC,GAAG,IAAI;QAEV;;QAEA,MAAMd,QAAQ,GAAGc,GAAG,CAACC,IAAI,CAACC,OAAO,CAAChB,QAAQ;QAC1C,MAAMD,KAAK,GAAGe,GAAG,CAACC,IAAI,CAACC,OAAO,CAACjB,KAAK;QACpC,MAAMG,EAAE,GAAGY,GAAG,CAACC,IAAI,CAACC,OAAO,CAACC,GAAG;;QAE/B;QACA;QACAnB,UAAU,CAAC,KAAK,CAAC;QACjBQ,QAAQ,CAAC;UACLY,IAAI,EAAE,UAAU;UAChBC,IAAI,EAAE;YACFnB,QAAQ;YACRD,KAAK;YACLG;UACJ;QACJ,CAAC,CAAC;QACFd,KAAK,CAACgC,OAAO,CAAC,uBAAuB,EAAE5B,YAAY,CAAC;MACxD,CAAC,CAAC,CACD6B,KAAK,CAAEC,GAAG,IAAI;QACX;QACAlC,KAAK,CAACuB,KAAK,CAACW,GAAG,CAACC,QAAQ,CAACR,IAAI,EAAEvB,YAAY,CAAC;MAChD,CAAC,CAAC;IACN;EACJ,CAAC;EAEH,oBACEE,OAAA;IAAK8B,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC5B/B,OAAA;MAAK8B,SAAS,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACpCnC,OAAA;MAAK8B,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC3B/B,OAAA;QAAK8B,SAAS,EAAC,aAAa;QAAAC,QAAA,eACxB/B,OAAA;UAAA+B,QAAA,EAAG;QAAqC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,eACNnC,OAAA;QAAK8B,SAAS,EAAC,cAAc;QAAAC,QAAA,eAEzB/B,OAAA;UAAOwB,IAAI,EAAC,MAAM;UAACY,QAAQ,EAAEtB,CAAC,IAAIJ,WAAW,CAACI,CAAC,CAACuB,MAAM,CAACC,KAAK,CAAE;UAACA,KAAK,EAAE7B,QAAS;UAAC8B,WAAW,EAAC;QAAU;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvG,CAAC,eACNnC,OAAA;QAAK8B,SAAS,EAAC,cAAc;QAAAC,QAAA,gBACzB/B,OAAA;UAAQwC,OAAO,EAAEA,CAAA,KAAMpC,UAAU,CAAC,KAAK,CAAE;UAAA2B,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACxDnC,OAAA;UAAQwC,OAAO,EAAE3B,YAAa;UAAAkB,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNnC,OAAA,CAACP,cAAc;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEV;AAAChC,EAAA,CA5EQF,KAAK;EAAA,QAGkBN,QAAQ;AAAA;AAAA8C,EAAA,GAH/BxC,KAAK;AA8Ed,eAAeA,KAAK;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}